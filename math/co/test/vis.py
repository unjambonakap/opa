#!/usr/bin/env python

from chdrft.cmds import CmdsList
from chdrft.main import app
from chdrft.utils.cmdify import ActionHandler
from chdrft.utils.misc import Attributize
import chdrft.utils.misc as cmisc
from chdrft.utils.misc import Attributize as A
import glog
import chdrft.utils.Z as Z
import chdrft.utils.K as K
import numpy as np
from pydantic import Field

global flags, cache
flags = None
cache = None


def args(parser):
  clist = CmdsList()
  ActionHandler.Prepare(parser, clist.lst, global_action=1)



def test(ctx):
  vertices=((0x1,-0x9),(0x9,-0x3),(-0x2,0x9),(0x9,-0x2),(0x5,-0x2),(0x3,-0x3),(-0x2,-0x8),(0x9,0x9),(-0x1,0x9),(-0x3,-0x4),(-0x8,-0x4),(0x6,0x8),)
  vertices=((0x1,-0x9),(0x9,-0x3),(-0x2,0x9),(0x9,-0x2),(-0x2,-0x8),(0x9,0x9),(-0x1,0x9),(-0x8,-0x4),)
  vertices=((0x1,-0x9),(0x9,-0x3),(-0x2,0x9),(-0x2,-0x8),(0x9,0x9),(-0x8,-0x4),)
  vertices = ((0x1,0x3,0x1),(-0x2,0x1,-0x2),(0x3,0x0,-0x3),(0x3,0x0,0x2),(-0x2,0x2,0x3),(0x2,0x3,-0x2),(0x3,-0x4,-0x2),)



  K.oplt.plot(A(points=vertices, conf=A(mode='3D')))
  input()
  pass


def main():
  ctx = Attributize()
  ActionHandler.Run(ctx)


app()
